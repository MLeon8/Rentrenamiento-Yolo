# -*- coding: utf-8 -*-
"""Reentrenamiento YOLO

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-iy84BfeiyE_-anMY8c3m3zFoQste8V3

Es iportante que antes de empezar se haya creado,comprimido y cargado previamente una carpeta llamada "darknet.zip" a la cuenta de Google Drive con la que se va a vincular Colab. Dciha carpeta debe contener:

*   Una carpeta llamada images en el directorio darknet/data que contenga las imagenes  quedaria como darknet/data/images
*   Una carpeta llamada labels en el directorio darknet/labels que contenga los archivos .txt con la calsificacion de las imagenes. quedaria como darknet/data/labels
*   en darknet/data se copian los archivos train.txt, val.txt, yolo.data, yolo.names

> Los archvivos train.txt y val.txt (test.txt) deben tener las rutas:

> `"data/images/balon (1).jpg`"
> `"data/images/balon (2).jpg`"
> `"data/images/balon (3).jpg`"
> `"data/images/balon (4).jpg`"
> `"data/images/balon (5).jpg`"
> `"data/images/balon (6).jpg`"

> Para el archivo yolo.data:


```
#   classes=3 #numero de objetos, en nuestro caso son 3
    train=  data/train.txt #patch de el archivo.train
    valid  = data/val.txt
    names = data/yolo.names
        #en yolo.names van los nombres de los objetos
    backup = backup

```

*  yolov3_custom_train.cfg en el directorio darknet\cfg


*   De darknet\examples , modificar “detector.c” . en la linea 138, de el siguiente modo:

```
    #138 if(i%1000==0 || (i < 1000 && i%100 == 0)){

      Esta modificación le dice a su programa que guarde el peso de su modelo
      cada 100 épocas si el número de épocas es menor que 1000, por otro lado,
      guarde el peso cada 1000 épocas. Esto es crucial porque COLAB permite
      solo un máximo de 12 horas de entrenamiento con el navegador abierto
      por lo que es importante que guarde el peso en su Drive antes de que
      se apague el servidor y se eliminen todos los archivos en eldirectorio
      de ejecución. Más tarde aún puede cargar el peso pre-entrenado guardado
      y entrenar el modelo nuevamente.
      Si se entrena en el Ordenador o no se cuenta con un GPU tambien se puede
      modificar esta linea para que se guarden , por ejemplo, cada 10 epocas
```

**1.- Se conecta Colab con Drive **
"""

from google.colab import drive
drive.mount('/content/drive')

"""2.- Se comprueba que version de NVIDIA estamos utilzzando"""

!nvcc --version

"""3.- Se descomprime la carpeta "darknet.zip" que se ha cargado previamente al Drive en donde ya se guardo el dataset, los ficheros, el .data y el .names


```
#
```

Si no se creo la carpeta backup en darkner.zip crear ahora una e introducir la direccion de la ruta en el archivo .data
"""

!unzip /content/drive/"My Drive"/darknet.zip

!unzip /content/drive/"My Drive"/darknet.zip

"""  4.- Se descarga Darknet y se crea una carpeta temporal en la lista de archivos de colab"""

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/darknet
!make
!chmod +x ./darknet



"""5.- Checamos los archivos que se descargaron y se copian los archivos a la carpeta de Darknet

"""

!rm /content/darknet/backup -r
!ln -s /content/drive/'My Drive'/YOLOv3_weight/backup /content/darknet

"""6.- Se instala dos2unix, esto para poder cargar los archivos del siguiente paso


```
#
```

unix2dos es una herramienta para convertir saltos de línea en un archivo de texto del formato Unix al formato DOS y viceversa. Cuando se invoca como unix2dos, el programa convertirá un archivo de texto Unix a formato DOS, cuando se invoque como dos2unix, convertirá un archivo de texto DOS a formato UNIX.
"""

!sudo apt install dos2unix

"""7.- Se cargan los archivos que se descomprimieron de la carpeta darknet.zip

```
#
```
Se verifica que las rutas de train y test correspondan a la nueva ruta donde se descomprimieron
Checar igualmente el .data y el .names
En el .cfg verificar las siguientes lineas;


*   8 & 9 : width = 416, height = 416
*   20: max_batches=6000
*   22: steps=5400
*   603,689,776: filters=24
*   610,696,783: clases=3


```
#  (filters = (classes + 5)*3)
```


"""

!dos2unix ./data/train.txt
!dos2unix ./data/test.txt
!dos2unix ./data/yolo.data
!dos2unix ./data/yolo.names
!dos2unix ./cfg/yolov3_custom_train.cfg
!dos2unix ./content/darknet/cfg/yolov3-tiny_custom_train.cfg
!dos2unix ./content/darknet/cfg/yolov3_custom_train.cfg

"""8.- Se pone a entrenar Yolo"""

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/darknet
!./darknet detector train data/yolo.data /content/darknet/data/cfg/yolov3_custom_train.cfg /content/darknet/darknet53.conv.74